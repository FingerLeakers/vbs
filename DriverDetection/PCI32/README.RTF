{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang3081\deflangfe3081{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f37\froman\fcharset238\fprq2 Times New Roman CE;}{\f38\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f40\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f41\froman\fcharset162\fprq2 Times New Roman Tur;}{\f42\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f43\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f44\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f45\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f47\fswiss\fcharset238\fprq2 Arial CE;}{\f48\fswiss\fcharset204\fprq2 Arial Cyr;}{\f50\fswiss\fcharset161\fprq2 Arial Greek;}{\f51\fswiss\fcharset162\fprq2 Arial Tur;}
{\f52\fbidi \fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f53\fbidi \fswiss\fcharset178\fprq2 Arial (Arabic);}{\f54\fswiss\fcharset186\fprq2 Arial Baltic;}{\f55\fswiss\fcharset163\fprq2 Arial (Vietnamese);}}{\colortbl;\red0\green0\blue0;
\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;
\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 \snext0 Normal;}{\s1\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\outlinelevel0\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 \sbasedon0 \snext0 heading 1;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}
{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\rsidtbl \rsid6634106}{\*\generator Microsoft Word 11.0.8134;}{\info{\operator Merlin}{\creatim\yr2007\mo12\dy19\hr6\min32}{\revtim\yr2007\mo12\dy19\hr6\min33}{\version2}{\edmins1}{\nofpages1}{\nofwords4008}
{\nofchars22850}{\nofcharsws26805}{\vern24611}{\*\password 00000000}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}{\xmlns2 urn:schemas-microsoft-com:office:smarttags}}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\donotembedsysfont0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind4\viewscale100\rsidroot6634106 \fet0{\*\wgrffmtfilter 013f}\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 {\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 
\b\fs20\insrsid6634106 README for PCI32.ZIP}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
\par 
\par This is a very quick note to explain PCI32.
\par 
\par PCI32 is just a port of my 16-bit DOS program 'PCI' to "true" win32 - that is, functionality under the 32-bit x86 builds of Windows NT 4.0, 2000, XP, 2003, Longhorn/Vista  and so on. This program will NOT work under DOS/WIN9x/ME/OS2/Linux etc, or any 64-b
it OS!!!
\par 
\par PCI32 is tested and works under any Microsoft win32 OS e.g. NT4.0, Win2000, XP, 2003, & "Longhorn/Vista", including all server versions and other variants (media centre, SBS server, tablet edition, enterprise edition, etc). I have never tested it 
under a cluster, but I would expect it to report on the attributes of whatever hardware node it\rquote s actually run on.
\par 
\par The new reader is recommended to read PCI.DOC (Included in the archive) for historical information regarding this software.
\par 
\par It is reported 
that PCI32 does work under a 32-bit WinPE Environment (such as BartPE), although I do not personally test it for use in that environment, and continued functionality is not guaranteed. I will try not to break WinPE compatibility, as WinPE is the sort of a
rea that PCI32 proves to be of great use - I quite simply don't have the resources to guarantee it.
\par 
\par Full documentation on the more abstract aspects of PCI32 such as the PCIDEVS.TXT official file format can be found in its sister program, PCI. Some function
s not relevant in the win32 environment have been removed - pci32 /? lists the functions that work...
\par 
\par Support website:\tab http://members.datafast.net.au/dft0802
\par Email:\tab \tab \tab chart (at) datafast (dot) net (dot) au\tab \tab \tab (Damn Spam!!)
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\fs20\insrsid6634106 How to use it?}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
\par 
\par PCI32 is a console mode program - you run it from the command prompt. The results appear in text form in the command prompt window, just like "good old" MS-DOS... There is no 'GUI' interface.
\par 
\par General advice for beginners:
\par 
\par }\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\tx720\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af3\afs20 \ltrch\fcs0 \f3\fs20\insrsid6634106 \'b7\tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 Unzip pci32 to a new folder e.g. C:\\
PCI32. Use winzip or winrar or windows XP\rquote s built-in \'93extract all\'94 command. You should get a bunch of files, including this document.
\par }\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af3\afs20 \ltrch\fcs0 \f3\fs20\insrsid6634106 \'b7\tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 Open the command prompt (start \endash 
 run \endash  (type in) }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\fs20\insrsid6634106 CMD}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106  or start \endash  all programs \endash  accessories \endash  command prompt) and you get a black 
screen with white text.
\par }{\rtlch\fcs1 \af3\afs20 \ltrch\fcs0 \f3\fs20\insrsid6634106 \'b7\tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 Type in }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\fs20\insrsid6634106 C:}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\fs20\insrsid6634106 
\par }{\rtlch\fcs1 \af3\afs20 \ltrch\fcs0 \f3\fs20\insrsid6634106 \'b7\tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 Type in }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\fs20\insrsid6634106 cd \\pci32}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\fs20\insrsid6634106 
\par }\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\tx720\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af3\afs20 \ltrch\fcs0 \f3\fs20\insrsid6634106 \'b7\tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 Type in }{\rtlch\fcs1 \ab\af1\afs20 
\ltrch\fcs0 \b\fs20\insrsid6634106 pci32
\par }\pard \ltrpar\ql \fi-360\li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af3\afs20 \ltrch\fcs0 \f3\fs20\insrsid6634106 \'b7\tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 Type in }{\rtlch\fcs1 \ab\af1\afs20 
\ltrch\fcs0 \b\fs20\insrsid6634106 exit}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106  to close the black screen, when you\rquote re finished
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
\par Your report will probably scroll off the top of the screen. Use the window\rquote s vertical scrollbar slider to go back \'93up\'94 and read from the top, or use the send-to-notepad method as per below:
\par 
\par Like all good console mode software, it takes command line parameters (try pci32 /?), and can have it's output 'piped' to a file or device. So, if you really hate console mode, do this:
\par 
\par PCI32 > report.txt
\par notepad report.txt
\par 
\par \'85Which will generate the report and then launch notepad with the results opened. You can then cut/paste/print/email/etc to your hearts content. As a free bonus, the file 'report.txt' is saved for you to come back to in future. Wow :-)
\par 
\par Also, check out the available options. PCI32 /? Will tell you all about lots of other useful functions!
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\fs20\insrsid6634106 If it won't run...}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
\par 
\par - You need at least PCI32.EXE, GWIOPM.SYS and PCIDEVS.TXT present for it to run. If any file is missing, it won't work.
\par 
\par - You need administrator privileges to run (or at least, rights to install and start device drivers). This is because PCI32 seamlessly installs a device driver (gwiopm.sys) in order to directly accesses the PCI hardware. Gwiopm.sys is removed
 when the program exits - nothing left behind in memory or the registry and no need to reboot. How cool is that? This also means you can run it on a 'live' server (from a floppy, memory stick, CD, whatever). Handy, that.
\par 
\par - You need to run it from a local disk drive; it will not run from a mapped drive or UNC path, because windows will not allow device drivers which are not located on local drives, to be loaded.
\par 
\par - You must run it from the command prompt, NOT by double-clicking on it from explorer or via start-run. Otherwise the results just scroll by and the window closes.
\par 
\par - PCI32's driver seems to conflict with \'93motherboard monitor\'94 by LiveWireDev.com Remove MBM (and reboot) before using PCI32. MBM is now outdated, unreliable, unsupported software and should be removed anyhow.
\par 
\par - PCI32 is a 32-bit program and will NOT function under any 64-bit version of Windows eg XP-64, server 2003
 64-bit edition, IA64 or A64 or Itanium 64-bit OS'S, nor will it run on plain DOS or 16-bit windows 95/98/ME/3.x or OS/2 (use plain PCI for these systems).
\par 
\par - Always remember that help is available by running pci32 /? You\rquote ll also discover some interesting extra features there.
\par 
\par - If none of the above makes sense, bear in mind that this is a technical tool written for technicians. Not to be nasty, but if the above is too confusing, perhaps you probably don't need whatever PCI32 does.
\par 
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\fs20\insrsid6634106 Updating the PCI database}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
\par 
\par The value of any PCI program is reflected directly by how current it's PCI device database (pcidevs.txt) is. If the database is too old, modern hardware won't be recognised, and therefore the program's net worth is much reduced. To counter this issue
, I actively maintain and update the database on a daily basis. New (and previously unknown) devices are regularly added, and existing entries are updated to more accurately reflect the actual hardware or fix recognition issues. Updated lists are publishe
d (on average) about twice a month, or as often as updates are received and processed.
\par 
\par All list entries are hand-edited, no scripts or automated procedures are permitted - this means that "garbage" is kept out of the list. Most other lists found on the web
 are full of errors, but this list is not, thanks to the validation of having a human actually checking the data as it is entered. 
\par 
\par Of course, typos and just plain incorrect information do make it to the list from time to time; therefore if you ever find an error, please email me the details, and it will be corrected immediately.
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\fs20\insrsid6634106 Your Contributions Are Requested}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
\par 
\par All this is only possible, however, if I receive update contributions from YOU, the public. I cannot possibly gain access to every piece of PCI
 hardware ever built, nor can I spend all my time trolling about people's computers, manufacturer manuals, driver .INF's and websites trying to locate PCI ID's. Here's how you can help:
\par 
\par If you have any information on a PCI device which is not in my databa
se, including the Windows driver's .INF file, a list of device ID's, web links, specifications documents, dumps from my PCI programs, etc etc. please send them to me!! My email address is listed at the top of this document.
\par 
\par Contributions from hardware dev
elopers are especially appreciated. If you would like your products to be instantly recognisable, by your official product name, to a large number of diagnostic tools as well as the Linux and FreeBSD operating systems, then you should send me your ID's! L
isting is of course completely free of charge, and you can be sure that your products will be correctly recognised using your preferred wording and official product naming conventions.
\par 
\par To add an entry to the database, at minimum I need the PCI Vendor ID, D
evice ID, and a device description. Any bonuses would be information pertaining to device revisions, subsystem ID's, previous company names for the vendor, details of product families, details on how to tell similar products apart, and so on.
\par 
\par The easiest way to do this is to get the .INF file from the Windows driver for the hardware, and send that to me. A Windows driver .INF file contains everything I need to know, and every driver must have an .INF file (Although it may sometimes be hidden i
nside an installer archive). As a bonus, .INF's often list a number of devices from the same product family, so I may be able to add recognition of a whole group of products, just from one INF!
\par 
\par  
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\fs20\insrsid6634106 A commentary on PCI databases}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
\par 
\par My database 'PCIDEVS.TXT' is
 the most extensive listing I can find on the web. There are other listings, such as the Linux list (pci.ids) and BSD list, however they don't keep track of as much basic information such as chip revisions, nor do they have as much "raw data" as mine. If 
y
ou think my list is out of date, don't complain about it, contact me and help me make the list better for everyone! Be aware, however, that lists exist with large numbers of errors or are simply out of date. Ask yourself when and how the list is maintaine
d before concluding that another list is better/bigger/more accurate.
\par 
\par Many other PCI databases are actually just my list, reformatted or merged with other lists to form a new list. My list has a few subtle characteristics, which indicate list re-packaging,
 such as the vendor names with a (was: xxx) edit, and a few deliberate typos here and there. Whilst I fully support the use of my data in other programs, the wholesale cut-and-paste of my list by simply renaming, reformatting or deliberate alteration of t
h
e comments to hide it's true origin disgusts me, and I urge you to report any such lists to me so that I may take action against the parties involved. It is my understanding at this time that both the Linux and FreeBSD lists are the [partial] result of me
r
ges of my list. It's absolutely OK by me for them to do this, as they asked my permission first, and I granted it. Anyone else merging my list with other lists is doing so without my permission or approval. Remember, the list is Copyright, and although yo
u are free to use it AS-IS, you cannot alter it or call it yours. (See the legal section at the end).
\par 
\par In summary: You can use this list for anything you want, but only if you keep it intact, as-is - don't pollute it with merges from other lists or remove a
ny part of the list, especially the comments at the top and bottom. If you think this list needs updating, don't merge your stuff in and keep it to yourself; please send ME the merge-data so that this list gets better!
\par 
\par I strongly urge developers to use th
e list in your programs, rather than start your own list: my list is absolutely free, easy to use, regularly updated, and contains far more info than you could possibly assemble yourself if you started from scratch today. All I ask is that you mention thi
s
 website in your software, so your users know where to go to get updates, and that you keep pcidevs.txt intact (no editing please), and as a separate file - don't compile it into your program, don't rename the file, and don't try to "hide" it's true sourc
e by editing it to remove my name and links.
\par 
\par You are welcome to come back to my website and download for yourself the most current database as often as you like. It's completely free, even for commercial use. There are no catches - this is a hobby of mine, not a money making enterprise.
\par 
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\fs20\insrsid6634106 Compiling the program}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
\par 
\par 100% of all source and object code required to recompile yourself is supplied. You don't need anything else besides a copy of {\*\xmlopen\xmlns2{\factoidname place}}Delphi{\*\xmlclose} to recompile yourself. I compile with Borland Delphi 7.0 standard
 (Delphi 4 works; other versions of {\*\xmlopen\xmlns2{\factoidname place}}Delphi{\*\xmlclose} are untested and may or may not work). Do *NOT* load into {\*\xmlopen\xmlns2{\factoidname place}}Delphi{\*\xmlclose}'s GUI!!! At the command prompt run }{
\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\ul\insrsid6634106 dcc32 pci32.pas }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 to compile (Ignore the warnings with gwiopm.pas)!
\par 
\par Several other people's code is used in PCI32 (Device Driver & NT driver subsystem stuff) - read all the source code files to see who did what.
\par 
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\fs20\insrsid6634106 Legal mumbo Jumbo}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
\par 
\par PCI32 is freeware. Use it, it's free. Also, no need to ask before you incorporate this code into commercial software. Credit would be app
reciated if you use parts of the code in your own programs, and an email would be nice if you do find a good use for it \endash  I\rquote 
ll be happy to mention your software on my website. As with all freeware products, the code is provided as-is, and no warranty or guarantee of fitness for any purpose is implied.
\par 
\par PCIDEVS.TXT is also freeware, HOWEVER it is also Copyright. You are NOT permitted to alter or edit the file in any way, particularly not to remove my name from it or add yours. This is my list, you may USE and distribute it as-is, but you may not alter it
. Consider the file READ-ONLY! You may make derivative works based on my file; eg you may merge the data contained within my list with yours to improve your list. Acknowledgement of my contribution, which is visible to your end-user, is required.
\par 
\par GWIOPM.SYS is not mine. Before using that driver software, please read it's licence and decide for yourself if you can use it. The home of GWIOPM.SYS is at http://www.wideman-one.com/gw/tech/Delphi/iopm/index.htm
\par 
\par Publishers wishing to include PCI32 on a free \lquote Cover CD\rquote  and/or write a review article on PCI32 for publication, are free to do so without making additional requests for approval; however the article must include attribution to the author 
\'93Craig Hart\'94 and reference the official website http://members.datafast.net.au/dft0802
\par 
\par Other than that, please use it at your leisure.
\par 
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\fs20\insrsid6634106  How to "parse" PCIDEVS.TXT
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
\par Writing your own code to use my database? GREAT! You're more than welcome: the database is freeware and you may use it for any purpose, including commercial
 purposes. Here's how *I* parse the list, in "pseudocode". I hope this makes it easier for you to write a parser too. Please forgive me if you think this is poorly designed/could be done better; the technique stems from three things:
\par 
\par - Sourcefile is TEXT, not Binary, so there are no fixed field lengths.
\par - Many fields are optional so the catch-22 of "you dunno if it's there 'till you read it, but once you've read it, you can't go back a line if it wasn't what you expected" applies.
\par - The program has been added to and expanded "ad hoc" over a 5 year period. Inevitable oversights and extensions have been dealt with several times.
\par - The basic file format can't be changed since there are many programs (including a couple of commercial packages) relying on my file format not changing.
\par 
\par 
\par 
\par 
\par 
\par Open the file as text (not binary) and read top to bottom, one line at a time.
\par 
\par 1. Look for V entries, until you make a match to the vendor ID, or EOF in which case report unknown vendor & device. Display Vendor Name.
\par 
\par <the file position pointer now points to the list of devices for that Vendor>
\par 
\par 
\par 2. Read D entries until you get a match to the device ID, or hit another V entry or EOF in which case stop and report unknown device. DONT display Device Name yet!!
\par 
\par <the file position pointer now points to possible device revision records>
\par 
\par 
\par 3. Read R entries until you get a match with the device's revision ID, or you run out of R entries, or EOF. (There may be no R entries at all). If you match R, then display that e
ntry for the Device Name, otherwise display the Device Name from the D entry... R is more accurate than D, but you might not match R.
\par 
\par <the file position pointer now points to possible subsystem records>
\par 
\par 
\par 4. If you matched D(and/or R), and the subsystem ID is <>00000000 then (look
\par for subsystem match):
\par 
\par    in a loop, read a line, and
\par      - try to match an X code with the 8 digit subsystem ID.
\par      - try to match an O code with your subsystem vendor ID. Remember the
\par        "generic" part description. Note the match, Keep going in this loop.
\par      - try to match an S code with your subsystem device ID, but only if the O
\par        code has already been matched.
\par    exit when you matched an X code, or (matched an S AND an O code), EOF, or
\par    you hit another V or D code.
\par 
\par - if you EOF or matched neither X, O nor S, report unknown subsystem ID.
\par - if you matched an X entry, report info next to X entry, and warn user this is a known "oddball" device that has an otherwise invalid subsystem ID. (Ignore any partial S-but-not-O match, if any - its a false alarm).
\par - if you matched O BUT NOT S, report the "generic" ID you remembered. Warn user it may not be "fully" accurate, but is just a guestimation.
\par - if you matched O AND S, report info next to S entry; you exactly matched the subsystem ID.
\par 
\par 5. close list
\par 
\par 6. If you have an O code, re-open the list. Scan list reading the V entries, but try to match with the O code. This tells you the OEM name. Stop at match or EOF. If EOF, report unknown OEM ID. Close list.
\par 
\par List must be closed and re-opened because the O name may be "higher" up the list, thus a scan-to-the-end of the list will not match. This also means this check must be done last since it causes us to "loose our spot" in the list. Filepos() doesn't work (i
n Pascal, at least) since we're working with a textfile!! (Argh!!)
\par 
\par If you find an invalid code letter, IGNORE IT; just move onto the next line.
\par This lets us add new code letters and not 'break' existing code. Also, ignore any invalid or null lines, or lines starting with a \'93;\'94 character.
\par 
\par 
\par 
\par 
\par  \'fe Other formatting notes for PCIDEVS.TXT:
\par 
\par All useful lines are formatted thus:
\par 
\par <Code Letter><Tab><2-8 hex digits><tab><text>
\par 
\par You may NOT replace <tab> with <space>! Also, do NOT replace a tab with eight spaces!!! th
e parser counts characters left to right, and looks for the tab character, so wrong, extra or missing characters will result in a wrongly parsed line. This means the file formatting must be kept strictly in check at all times. Use my CHKPCI utility (Avail
able seperately from the website) to inspect and validate your changes.
\par 
\par Overall, total line length must be 255 characters or less (Pascal language limitation). Try to keep the text under about 70 chars for display legibility (excessive display wordwrap really is in poor taste :-/)
\par 
\par All entries must always follow numerical order, lowest to highest. This makes duplicates almost impossible when editing, but the parser doesn't actually care, since it works on "keep looking until you run out" principle. A "tiny"
 efficiency could be added by coding in "if database ID > our ID, give up" but I hardly see the point, since the program runs faster than you can blink anyhow.
\par 
\par You should ignore all lines not starting with a valid code letter,tab sequence. This allows cla
rity by inserting blank lines and comments wherever it may please you. For clarity, begin comment lines with a <;> character; Accidental capitilisation of the first word of a comment could lead to a wrongly parsed code.
\par 
\par Valid Codes:
\par 
\par   V\tab Vendor ID. 4 digit hex number.
\par   D\tab Device ID. 4 digit hex number.
\par   R\tab Revision ID. 2 digit hex number.
\par   X\tab Incorrectly formatted susbsystem ID. 8 digit hex number.
\par   O\tab Subsystem OEM ID. 4 digit hex number. (top 16 bits of subsystem ID)
\par   S\tab Subsystem device ID. 4 digit hex number. (low 16 bits of subsystem ID)
\par 
\par The codes must always appear in this order in the file. Multiple O and S
\par entries may appear. O entries may appear without S entries. Only V and D
\par entries are required to identify a device - all others are optional and my be
\par omitted.
\par 
\par A note on R entries: R is NOT permitted under a subsystem entry. A chipset revision is just that - the BASE CHIPSET's revision. The OEM can't have any influence on the chipset's revision, since he doesn't m
ake it! Thus, R is of no use under the subsystem. I very much doubt any OEM has made two different model cards by carefully buying different revision chips from the chipset vendor!!
\par 
\par A note on X entries: X entries are very rare. In the "early days" of subs
ystem ID's, some vendors apparently thought they had carte blanche to put in any number they liked. WRONG! However a few devices now exist with nonsensical subsystem ID's like "55555555" or "F0F01234" and suchlike. X entries take care of these few "oddbal
l" devices. I don't expect to add any more than one or two new X entries, ever.
\par 
\par ** New code letters may be added from time to time, so your code should always ignore any unknown code letters. This lets up expand the scope of the file without 'breaking' existing code.
\par 
\par 
\par 
\par 
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\fs20\insrsid6634106 Thanks, and so on
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
\par It would be impossible to individually thank everyone who has contributed something towards PCI/PCI32 over the years, however the following people have gone out of their way to help over and extended period, and so an e
xtra special thankyou goes out to them now.
\par 
\par Ralph Brown, Ray Hinchliffe, Konstantin Koll, Sergei Shtylyov, Alex Kossenkov, Bill Avery III, C. Adrian Silasi, Gunther Mayer, Stefan Danes, and finally, {\*\xmlopen\xmlns2{\factoidname PersonName}}Veit Kannegieser{\*\xmlclose}.
\par \tab 
\par Thanks guys, without your outstanding efforts, both the PCI code and the device database would not be anywhere near as good as they are today.
\par 
\par A very quick final mention goes out to {\*\xmlopen\xmlns2{\factoidname PersonName}}Veit Kannegieser{\*\xmlclose}
, who maintains a much enhanced, OS/2-specific build of PCI tailored to the needs of OS/2 users, and who has by far contributed the most in the way of bug fixes, enhancements, ideas and so forth. You will find a link to Veit\rquote 
s version on the website Thanks Veit!
\par 
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\fs20\insrsid6634106 Program Revision Info}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
\par 
\par 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\keepn\nowidctlpar\wrapdefault\faauto\outlinelevel0\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 {\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 
\b\fs20\insrsid6634106 Version 0.50\'df
\par }\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
- inital relase. Crude, rushed port from DOS Version. Seems to work OK, but:
\par \tab no color
\par \tab no page-pause
\par \tab some diagnostic modes removed as not relevant to win32 environment
\par \tab driver requires administrative privileges to load
\par \tab filesize 81k!!
\par 
\par 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\keepn\nowidctlpar\wrapdefault\faauto\outlinelevel0\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 {\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 
\b\fs20\insrsid6634106 Version 0.51\'df
\par }\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
- added decode of driver load/unload error messages
\par - added self-repair of previous failed driver-install to fix an issue where the driver stuffs up if it couldn't load for a reason, and then PCI32 was re-run. (Usually caused by no gwiopm.sys or not run with admin privileges)
\par - Added APIC mode detection & comment to IRQ info.
\par - Added run from anywhere feature - pci32 can now run from a path and still load pcidevs.txt. Unsure if UNC path works yet, but is likely...
\par - got colour working in console display output.
\par 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\keepn\nowidctlpar\wrapdefault\faauto\outlinelevel0\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 {\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 
\b\fs20\insrsid6634106 Version 0.52\'df
\par }\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
- Added major features to power management capability decoding
\par - fixed major bugs with:
\par     printstatus() routine always dropping first message
\par     expROM sizing (again!)
\par - removed code left over from DOS port which is not actually called in program!
\par - will now run from a UNC path correctly in some cases; needs more testing to be certain...
\par - updated with AGP 8x (Version 3.0) support
\par - updated with 'classic' PCI v2.3 & v3.0 specs:
\par      New capabilities:
\par \tab HyperTransport Capability
\par \tab AGP 8x capability
\par \tab Secure Device capability
\par \tab PCI Express capability
\par \tab MSI-X capability
\par - updated with basic PCI Express support; much more to come yet
\par     PCI Express support is experimental and untested on actual hardware so far...
\par 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\keepn\nowidctlpar\wrapdefault\faauto\outlinelevel0\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 {\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 
\b\fs20\insrsid6634106 Version 0.53\'df}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
\par }\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
- Bunch of bugfixes to do with scanning multi-function devices. This bug has existed since the very first, original version of PCI!! 
\par - Obscure bug with revision checking in subsystem code causing a GPF fixed
\par   (Bug only visible on Intel PCIe chipsets which are unknown to pcidevs.txt)
\par 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\keepn\nowidctlpar\wrapdefault\faauto\outlinelevel0\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 {\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 
\b\fs20\insrsid6634106 Version 1.0
\par }\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
- Decided to drop the 'beta' label once and for all; hence version 1.0
\par - More issues with Expansion ROM detection/sizing fixed
\par - Fixed problems with hex dump corruption (caused by ExpROM decode test)
\par - some fixes to PCI Express code
\par 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\keepn\nowidctlpar\wrapdefault\faauto\outlinelevel0\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 {\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 
\b\fs20\insrsid6634106 Version 1.1
\par }\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
- Fixed a big bug with configuration space write code \endash  which was not actually writing anything sane into the PCI Configuration space registers. This has finally fixed the elusive Expansion Rom code once and for all - I Promise!
\par - Added decoding of Power Management data register, if present.\line - Added maximum bus latency and minimum bus grant timer info to reports
\par - Added \endash R option to draw a \'93tree\'94 of the hardware Bus:Device:Function structure
\par - Finally fixed log standing, stupid code bug with subsystems vs R entries.
\par - Minor fix-ups to PCI Express code; more to follow yet.\line - Depreciated priority of legacy \lquote PCI\rquote  16-bit versi
on, which will continue to be maintained, but is given less priority than PCI32 in future. Expect to see new features in PCI32 first, with back-porting, where possible, later.
\par 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\keepn\nowidctlpar\wrapdefault\faauto\outlinelevel0\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 {\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 
\b\fs20\insrsid6634106 Version 1.2
\par }\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
- Fixed bug with an un-initialised variable in PCI
\par - Totally overhauled bus type (-B option) detection. Much better at determining bus type (PCI, AGP, PCIe or CardBus) correctly.
\par - Added PCI-X bus type guessing to \endash B option
\par - A few other minor bugfixes\line - Added \endash z debugging option: PCI32 shows a bit more debugging info to help developers with troubleshooting code faults (will not be useful in normal use; developers only!!).
\par 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\keepn\nowidctlpar\wrapdefault\faauto\outlinelevel0\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 {\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 
\b\fs20\insrsid6634106 Version 1.3
\par }\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang3081\langfe3081\cgrid\langnp3081\langfenp3081 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
- Major improvements to the -R option, as follows:
\par -R now draws all the tree lines correctly in all cases; previously it would draw the lines incorrectly if the last device on a bus was a multifunction type device.
\par - R now shows any detected busses with no present devices; this is useful to report the existence of a known, but unpopulated bus e.g. a CardBus port or PCI-hotplug bus with no inserted card(s).
\par -R now shows the class code info of each device. This makes it easier to visualise the bus layout without having to refer to the main part of the report.
\par -R now lists the bridge bus numbers to make visualising bus to bus bridge layout easier.
\par 
\par - Altered code to allow for any number of PCI buses (up to the maximum of 255 allowed by the PCI standard), by following the chain of bridges until no more bridges exist. This removes the need for the workaround that formerly dealt with BIOS-unconfigure
d CardBus busses, and cleans up the code nicely as a result.
\par - Altered installer mode I: parameter: Now written in HEX rather than decimal, because under windows values up to 255 are legal, and it was screwing up the indentation. 
\par - Another slight fix for \endash I mode: trailing space on each line removed
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\fs20\insrsid6634106 Anyone using the I: parameter of installer mode will probably need to re-write their code to account for these changes.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
\par - Removed driver related messages from top and bottom of all output. This cleans up installer mode\rquote s reports so that they come out the same way PCI does them.
\par - Added PCI-X 2.0 support to PCI-X capability decoding; bugfixes to PCI-X support in general
\par - PCI32 now detects when it\rquote s I/O is redirected, and uses regular ASCII characters where appropriate, to enable clear viewing in Windows with fixed-width fonts (lucidia, courier new, terminal, etc).
\par - PCI32 now recognises the OS type and reports it in the Searching info at the top of the report.
\par - more code cleanups for readability and conversion to modularised procedures
\par - Removed \endash B option: Bus info is now enabled at all times, as bus info is now at least as important as basic device ID, on modern hardware.
\par - Updated PCI Express Capability report layout for better debugging/readability
\par - Updated CardBus support with much more decoding of {\*\xmlopen\xmlns2{\factoidname PlaceType}}{\*\xmlopen\xmlns2{\factoidname PlaceType}}CardBus{\*\xmlclose} {\*\xmlopen\xmlns2{\factoidname PlaceType}}Bridge{\*\xmlclose}{\*\xmlclose} data
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\fs20\insrsid6634106 Version 1.4
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 - Fixed a bug with VPD dumps in \endash Z (debug) mode
\par - Fixed a bug with \endash R reporting wrong item count if an empty bus was encountered
\par - Fixed some typos and indent formatting errors
\par - Fixed big bug with Wrong SubSystem info reported in certain cases
\par - Fixed \endash R option to report CardBus busses, even if unpopulated
\par - Added support for new Hi Definition Audio class code\line - Re-write of workoutbusses routine. Now supports multiple root-bus systems, which was broken in v1.3
\par - Now supports up to 512 actual devices (was 200 devices previously)
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\fs20\insrsid6634106 Version 1.6}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
\par - Various minor fixups throughout
\par - Recognises Windows Vista OS correctly
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 - Support for several new \lquote new capabilities\rquote  added.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid6634106 
\par }}